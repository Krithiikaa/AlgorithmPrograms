# -*- coding: utf-8 -*-
"""1.1.Linear Search With Time.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Zi47Nhh75sYee8R43e9eyNeQD6HZp7lq
"""

import time
import matplotlib.pyplot as plt
import random

# Linear search function
def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i  # Element found
    return -1  # Element not found

# Measuring time for different n
sizes = [1000, 2000, 3000, 4000, 5000]
times = []

for n in sizes:
    arr = [random.randint(1, 10000) for _ in range(n)]
    target = arr[-1]  # Worst-case position
    start = time.time()
    linear_search(arr, target)
    end = time.time()
    times.append(end - start)

# Plotting the graph
plt.plot(sizes, times, marker='o')
plt.title("Linear Search Time Complexity")
plt.xlabel("Number of elements (n)")
plt.ylabel("Time (seconds)")
plt.grid(True)
plt.show()